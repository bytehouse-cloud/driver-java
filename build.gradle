plugins {
    id 'java-library'
    id 'checkstyle'
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "org.sonarqube" version "3.0"
    id "jacoco"
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.projectName", "bytehouse/driver-java"
        property "sonar.projectKey", "bytehouse:driver-java"
        property "sonar.host.url", System.getenv("SONAR_HOST_URL")
        property "sonar.login", System.getenv("SONAR_TOKEN")
    }
}

group 'com.bytedance.bytehouse'
description 'ByteHouse JDBC Driver'

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

repositories {
    maven {
        url "https://maven.byted.org/repository/public"
    }
    maven {
        url "https://maven.byted.org/repository/releases"
    }
    maven {
        url "https://maven.byted.org/repository/snapshots"
    }
}

dependencies {
    implementation "io.airlift:aircompressor:0.18"
    implementation "org.slf4j:slf4j-api:1.7.30"
    implementation "org.slf4j:slf4j-simple:1.7.30"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'com.github.RoaringBitmap.RoaringBitmap:RoaringBitmap:0.9.15'

    testImplementation "ru.yandex.clickhouse:clickhouse-jdbc:0.2.5"
    testImplementation "org.mockito:mockito-core:3.6.28"
    testImplementation "org.junit.jupiter:junit-jupiter:5.7.0"
    testImplementation "com.google.guava:guava:16.0.1"
    testImplementation "org.testcontainers:junit-jupiter:1.15.1"
    testImplementation "org.testcontainers:clickhouse:1.15.1"
}

shadowJar {
    zip64 true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE // Explicit strategy to exclude duplicates
}

def test = tasks.named("test") {
    useJUnitPlatform{}
}

checkstyle {
    configFile file("config/checkstyle.xml")
    configProperties 'checkstyle.header.file': file("config/license.header")
}
